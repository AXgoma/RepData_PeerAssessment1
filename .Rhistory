educational_data <- read.csv("educational.csv")
merged_data <- merge(educational_data, gdp_data,
by = "CountryCode")
gdp_data <- read.csv("gdp.csv", skip = 3)
gdp_data <- gdp_data[1:200, c(1,2,4,5)]
tail(gdp_data)
gdp_data <- gdp_data[1:192, c(1,2,4,5)]
gdp_data <- read.csv("gdp.csv", skip = 3)
gdp_data <- gdp_data[1:192, c(1,2,4,5)]
tail(gdp_data)
gdp_data <- read.csv("gdp.csv", skip = 3)
gdp_data <- gdp_data[1:191, c(1,2,4,5)]
tail(gdp_data)
gdp_data <- rename(gdp_data, CountryCode = X)
merged_data <- merge(educational_data, gdp_data,
by = "CountryCode")
?arrange
arranged_data <- arrange(merged_data, des(Ranking))
arranged_data <- arrange(merged_data, desc(Ranking))
head(arranged_data, 13)
gdp_data <- transform(gdp_data, Ranking = as.numeric(Ranking))
gdp_data <- transform(gdp_data, US.dollars. = as.numeric(US.dollars.))
gdp_data <- read.csv("gdp.csv", skip = 3)
gdp_data <- gdp_data[1:191, c(1,2,4,5)]
gdp_data <- rename(gdp_data, CountryCode = X)
gdp_data <- transform(gdp_data, Ranking = as.numeric(Ranking))
merged_data <- merge(educational_data, gdp_data,
by = "CountryCode")
arranged_data <- arrange(merged_data, desc(Ranking))
head(arranged_data$Ranking, 20)
head(arranged_data$Long.Name, 20)
View(merged_data)
filtered_data <- group_by(merged_data,
Income.Group == High income: OECD | Income.Group == High income: nonOECD)
filtered_data <- group_by(merged_data,
Income.Group == "High income: OECD" | Income.Group == "High income: nonOECD")
filtered_data <- filter(merged_data,
Income.Group == "High income: OECD" | Income.Group == "High income: nonOECD")
grouped_data <- group_by(merged_data, Income.Group)
summarise(grouped_data, rank_mean = mean(Ranking))
?mean
quantile_group <- quantile(merged_data, probs = c(0.2, 0.4, 0.6, 0.8))
quantile_group <- quantile(merged_data, probs = c(0.2, 0.4, 0.6, 0.8), na.rm = TRUE)
ranked <- arrange(merged_data, Ranking)
filter(ranked, Income.group = "Lower middle income")
ranked <- arrange(merged_data, Ranking)
filter(ranked, Income.group == "Lower middle income")
View(merged_data)
filter(ranked, Income.Group == "Lower middle income")
low_income <- filter(ranked, Income.Group == "Lower middle income")
low_income <- filter(ranked, Ranking == c(1:38))
low_income <- filter(ranked, Income.Group == "Lower middle income")
low_income <- filter(ranked, Ranking <38)
View(ranked)
View(filtered_data)
low_income <- filter(ranked, Income.Group == "Lower middle income")
low_income <- filter(low_income, Ranking <38)
low_income
low_income <- filter(ranked, Income.Group == "Lower middle income")
low_income <- filter(low_income, Ranking <39)
idaho_data <- read.csv("idaho.csv")
agricultureLogical <- idaho_data$ACR == 3 & idaho_data$AGS == 6
which(agricultureLogical)
idahoURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(idahoURL, destfile = "C:/Users/cynth/OneDrive/Documents/idaho2.csv")
idaho <- read.csv("idaho2.csv")
splitnames <- strsplit(names(idaho), "wgtp")
View(splitnames)
splitnames[123]
gdp <- read.csv("gdp.csv")
gdp <- gdp[1:191, c(1,2,4,5)]
head(gdp)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
head(gdp)
library(plyr)
library(dplyr)
gdp <- rename(gdp, countrycode = X)
gdp <- rename(gdp, countrycode = X)
names(gdp)
gdp <- gsub(".", "", names(gdp))
names(gdp)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
gdp <- gsub(".", "", names(gdp),)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
gdp <- gsub("\.", "", names(gdp),)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
gdp <- gsub("\\.", "", names(gdp),)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
gdp <- gsub("\\.", "", names(gdp))
head(gdp)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
head(gdp)
gdp <- gsub(",", "", gdp$US.dollars.)
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, countrycode = X)
usd <- gsub(",", "", gdp$US.dollars.)
head(gdp)
usd <- as.numeric(usd)
usdmean <- mean(usd)
usdmean
mean(usd, na.rm = TRUE)
grep("^United", gdp)
names(gdp)
head(gdp)
grep("^United", economy)
grep("^United", gdp$economy)
grep("^United", gdp$Economy)
names(edu)
edu <- read.csv("educational.csv")
names(edu)
edu <- tolower(names(edu))
edu <- read.csv("educational.csv")
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, CountryCode = X)
merged <- merge(gdp, edu, by = "CountryCode")
names(edu)
head(edu$Special.Notes)
table(grepl("June$", merged))
table(grepl("June", merged))
View(merged)
table(grepl("June", merged$Special.Notes))
table(grepl("[Jj]une", merged$Special.Notes))
install.packages("quantmod")
library(quantmod)
amzn <- getSymbols("AMZN",auto.assign=FALSE)
sampleTimes <- index(amzn)
library(lubridate)
table(grepl("2012", sampleTimes))
days <- weekdays(sampleTimes)
sampleTimes <- mutate(sampleTimes, days)
?mutate
sampleTimes <- mutate(sampleTimes, days = days)
table(grepl("2012" & weekday(sampleTimes) == "Monday", sampleTimes))
table(grepl("2012" & weekdays(sampleTimes) == "Monday", sampleTimes))
days <- weekdays(sampleTimes)
date <- data.frame(sampleTimes, days)
table(grepl("2012" & "Monday", date))
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
days <- format(sampleTimes, "%a %b %Y")
times <- format(sampleTimes, "%a %b %Y")
table(grepl("2012", times))
table(grepl("Mon.2012", times))
table(grepl("Mon(.*)2012", times))
gdp <- read.csv("gdp.csv", skip = 3)
gdp <- gdp[1:191, c(1,2,4,5)]
gdp <- rename(gdp, CountryCode = X)
grep("^United", gdp$Economy)
# Q4
edu <- read.csv("educational.csv")
merged <- merge(gdp, edu, by = "CountryCode")
View(merged)
table(grepl("Fiscal year end: June", merged$Special.Notes))
grep("^United", gdp$Economy)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline
?trellis.par.set
library(datasets)
data(airquality)
force(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?lpoints
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
View(replaced_data)
weekdays(replaced_data$date)
View(replaced_data)
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
View(replaced_data)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
library(dplyr)
library(tidyverse)
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
View(replaced_data_days)
View(replaced_data_days)
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
View(replaced_data_days)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
View(activity_pattern_days)
activity_pattern_days <- replaced_data_days %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
library(ggplot2)
setwd("D:/Courses/RStudio/RepData_PeerAssessment1")
View(activity_pattern_days)
View(activity_pattern)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(replaced_data_days$pattern ~ replaced_data_days$interval | replaced_data_days$day)
View(activity_pattern_days)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day, data = activity_pattern_days)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
layout = c(1,2))
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2))
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken between intervals in weekdays/weekends",
ylab = "average steps")
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken in weekdays/weekends",
ylab = "average steps")
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken in weekdays/weekends",
ylab = "average steps")
knit2html()
library(knitr)
knit2html()
knit2html("PA1_template.Rmd")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken in weekdays/weekends",
ylab = "average steps")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken in weekdays/weekends",
ylab = "average steps")
library(knitr)
knit()
knit("PA1_template.Rmd")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
activity_pattern_days <- replaced_data_days %>%
group_by(across(c(interval, day))) %>%
summarise(pattern = mean(steps))
library(lattice)
xyplot(pattern ~ interval | day,
data = activity_pattern_days,
type = "l", layout = c(1,2),
main = "Daily activity pattern of steps taken in weekdays/weekends",
ylab = "average steps")
knit("PA1_template.Rmd")
library(knitr)
knit("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
install.packages("markdown")
library(markdown)
knit2html("PA1_template.Rmd")
data <- read.csv("activity.csv")
data$date <- as.Date(data$date, "%Y-%m-%d")
without_na <- na.omit(data)
library(dplyr)
total_steps <- without_na %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
summary(total_steps$total)
activity_pattern <- without_na %>%
group_by(interval) %>%
summarise(pattern = mean(steps))
with(activity_pattern, plot(interval, pattern,
type = "l",
main = "Daily activity pattern of steps taken between intervals",
ylab = "average steps"))
activity_pattern[which.max(activity_pattern$pattern),]
sum(is.na(data))
replaced_data <- merge(data, activity_pattern, by = "interval")
replaced_data$steps <- ifelse(is.na(replaced_data$steps),
replaced_data$pattern, replaced_data$steps)
replaced_data <- replaced_data[,1:3]
total_steps_replaced <- replaced_data %>%
group_by(date) %>%
summarise(total = sum(steps))
hist(total_steps_replaced$total,
main = "Histogram of steps frequency",
xlab = "Total range of steps taken per day")
library(lubridate)
replaced_data_days <- replaced_data %>%
mutate(day = ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))
replaced_data_days$day <- as.factor(replaced_data_days$day)
library(markdown)
library(knitr)
knit("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
